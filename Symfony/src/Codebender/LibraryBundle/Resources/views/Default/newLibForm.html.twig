
<head>
{% include 'CodebenderLibraryBundle:Default:includes.html.twig' %}
<script src={{ asset("js/zip.js") }}></script>

    <script type="text/javascript">

        function get_lib_from_github()
        {
            var $url = $("#githubUrl").val();
            var $github_url_pattern = /^(https?:\/\/)?(www.)?github.com\/[a-zA-Z0-9\.\-_]+\/[a-zA-Z0-9\.\-_]+/;
            if (!$github_url_pattern.test($url))
                $("#newLibMessage").text("Invalid Github URL");
            else
            {

                $("#newLibMessage").text("Loading Library.....");
                $.post( "{{ path('codebender_library_get_library_git_meta', {'authorizationKey' : authorizationKey}) }}", { githubUrl: $url })
                    .done(function( data ) {
                    if(data.success)
                    {
                        $("#newLibMessage").text("Library Found!");
                        update_git(data.owner, data.repo, data.branch);
                        var $el = $("#machineNames");
                        select_github();
                        $el.empty();
                        $.each(data.names, function(k,v){
                            $el.append($("<option></option>")
                                    .attr("value", v).text(v));
                        });
                        $el.prop("selected", false);
                        update_machineName();
                    }
                    else
                    {
                        $("#newLibMessage").text("There is no such library.");
                    }
                });
            }

        }

        function update_machineName()
        {
            $("#newLibrary_MachineName").val($("#machineNames").val());
        }

        function update_git(owner, repo, branch)
        {
            $("#newLibrary_GitOwner").val(owner);
            $("#newLibrary_GitRepo").val(repo);
            $("newLibrary_GitBranch").val(branch);
        }

        function endsWith(str, suffix) {
            return str.indexOf(suffix, str.length - suffix.length) !== -1;
        }

        function startsWith (str, suffix){
            return str.indexOf(suffix) == 0;
        }

        function onerror(message) {
            alert(message);
        }

        function getZipFiles(file, onend) {
            zip.createReader(new zip.BlobReader(file), function(zipReader) {
                return zipReader.getEntries(onend);
            }, onerror);
        }

        function get_lib_from_zip()
        {
            select_zip();
            getZipFiles($("#newLibrary_Zip")[0].files[0], function(entries) {
                var $el = $("#machineNames");
                $el.empty();
                entries.forEach(function(entry) {

                    if(endsWith(entry.filename, ".h") && !startsWith(entry.filename, ".")  && !startsWith(entry.filename, "_") )
                    {
                        var $lastSlash = entry.filename.lastIndexOf("/");
                        var $header = entry.filename.substr($lastSlash+1);
                        var $name = $header.substr(0,$header.length -2);
                        $el.append($("<option></option>")
                                .attr("value", $name).text($name));

                    }
                });
                $el.prop("selected", false);
                update_machineName();
            });
        }

        function select_zip()
        {
            $("#newLibrary_GitOwner").attr("disabled", "disabled");
            $("#newLibrary_GitRepo").attr("disabled", "disabled");
            $("#newLibrary_GitBranch").attr("disabled", "disabled");
            $("#newLibrary_Zip").removeAttr("disabled");
            $("#newLibrary_Url").removeAttr("disabled");
            $("#gitHubDiv").hide();
            $("#orDiv").hide();
            $("#metaDiv").show();
            $("#urlDiv").show();
        }

        function select_github()
        {
            $("#newLibrary_GitOwner").removeAttr("disabled");
            $("#newLibrary_GitRepo").removeAttr("disabled");
            $("#newLibrary_GitBranch").removeAttr("disabled");
            $("#newLibrary_Zip").attr("disabled", "disabled");
            $("#newLibrary_Url").val("http://github.com/"+$("#newLibrary_GitOwner").val()+"/"+ $("#newLibrary_GitRepo").val());
            $("#zipDiv").hide();
            $("#orDiv").hide();
            $("#metaDiv").show();
            $("#urlDiv").hide();
        }

        $(document).ready(function()
        {
            $("#newLibMessage").text("Add a New Library:");
            $("#githubUrl").change(function(){get_lib_from_github()});
            $("#newLibrary_Zip").change(function(){get_lib_from_zip()});
            $("#machineNames").change(function(){update_machineName()});
            $("#metaDiv").hide();

        });

    </script>
</head>
<body>
{% for flashMessage in app.session.flashbag.get('notice') %}
    <div class="flash-notice">
        <i>{{ flashMessage }}</i>
    </div>

{% endfor %}


<h3 id = "newLibMessage"></h3>



{{ form_start(form) }}
    {{ form_errors(form) }}
    <div id="gitHubDiv">
       <input type="text" id="githubUrl" autocomplete="off" placeholder="Enter Github Url"/></div>
    </div>
    <div id='orDiv'>
        <h3>or</h3>
    </div>
    <div id="zipDiv">
        <h3>
            Upload Zip File:
            {{ form_widget(form.Zip) }}
        </h3>
    </div>
    <div id="metaDiv">
        <div>
            <p>
                Human Name:
                {{ form_widget(form.HumanName) }}
            </p>
        </div>
        <div>
            <p>
                Machine Name:
                <select id="machineNames">Machine Names</select>
            </p>
        </div>
        <div>
            <p>
                Description:
                {{ form_widget(form.Description) }}
            </p>
        </div>
        <div id="urlDiv">
            <p>
                Info Url:
                {{ form_widget(form.Url) }}
            </p>
        </div>
        <div> <button class="btn btn-primary" {{ form_widget(form.Go) }}</button>
        </div>
    </div>

{{ form_end(form) }}
</body>



